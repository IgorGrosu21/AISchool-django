# Generated by Django 5.1.6 on 2025-05-08 13:08

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('sapphires', models.SmallIntegerField(default=0, verbose_name='Сапфиры')),
                ('rubies', models.SmallIntegerField(default=0, verbose_name='Рубины')),
                ('emeralds', models.SmallIntegerField(default=0, verbose_name='Изумруды')),
                ('diamonds', models.SmallIntegerField(default=0, verbose_name='Бриллианты')),
                ('networth', models.SmallIntegerField(default=0, verbose_name='Состояние')),
            ],
            options={
                'verbose_name': 'Баланс',
                'verbose_name_plural': 'Балансы',
            },
        ),
        migrations.CreateModel(
            name='Klass',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('form', models.SmallIntegerField(default=5, verbose_name='Цифра')),
                ('letter', models.CharField(default='A', max_length=1, verbose_name='Буква')),
                ('profile', models.CharField(choices=[('R', 'Реальный'), ('U', 'Гуманитарный')], max_length=1, verbose_name='Профиль')),
            ],
            options={
                'verbose_name': 'Класс',
                'verbose_name_plural': 'Классы',
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('file', models.FileField(upload_to='api/', verbose_name='Файл')),
            ],
            options={
                'verbose_name': 'Файл',
                'verbose_name_plural': 'Файлы',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('en', models.CharField(max_length=32, verbose_name='EN')),
                ('ro', models.CharField(max_length=32, verbose_name='RO')),
                ('ru', models.CharField(max_length=32, verbose_name='RU')),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('plan', models.CharField(choices=[('A', 'monthly'), ('Y', 'yearly'), ('K', 'klass'), ('L', 'lifetime')], default='Y', max_length=1, verbose_name='План')),
                ('price', models.SmallIntegerField(default=1000, verbose_name='Цена')),
                ('ending', models.DateField(verbose_name='Конец')),
            ],
            options={
                'verbose_name': 'Подписка',
                'verbose_name_plural': 'Подписки',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('currency', models.CharField(choices=[('S', 'Sapphire'), ('R', 'Ruby'), ('E', 'Emerald'), ('D', 'Diamond')], default='S', max_length=1, verbose_name='Валюта')),
                ('cost', models.SmallIntegerField(default=1, verbose_name='Цена')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
                ('slug', models.SlugField(max_length=64, verbose_name='Слаг')),
            ],
            options={
                'verbose_name': 'Задание',
                'verbose_name_plural': 'Задания',
            },
        ),
        migrations.CreateModel(
            name='Theory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('currency', models.CharField(choices=[('S', 'Sapphire'), ('R', 'Ruby'), ('E', 'Emerald'), ('D', 'Diamond')], default='S', max_length=1, verbose_name='Валюта')),
                ('cost', models.SmallIntegerField(default=1, verbose_name='Цена')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('slug', models.SlugField(max_length=128, verbose_name='Слаг')),
            ],
            options={
                'verbose_name': 'Теория',
                'verbose_name_plural': 'Теория',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('starting', models.TimeField(verbose_name='Начало')),
                ('ending', models.TimeField(verbose_name='Конец')),
                ('weekday', models.CharField(choices=[('MO', 'MO'), ('TU', 'TU'), ('WE', 'WE'), ('TH', 'TH'), ('FR', 'FR'), ('SA', 'SA'), ('SU', 'SU')], max_length=2, verbose_name='День недели')),
                ('klass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timetable', to='api.klass', verbose_name='Класс')),
            ],
            options={
                'verbose_name': 'Урок',
                'verbose_name_plural': 'Уроки',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
                ('country', models.CharField(default='Moldova', max_length=32, verbose_name='Страна')),
                ('city', models.CharField(default='Chisinau', max_length=16, verbose_name='Город')),
                ('address', models.CharField(max_length=64, verbose_name='Адрес')),
                ('lang', models.CharField(choices=[('RO', 'RO'), ('RU', 'RU'), ('EN', 'EN'), ('FR', 'FR'), ('BU', 'BU'), ('UK', 'UK'), ('GA', 'GA')], default='RO', max_length=2, verbose_name='Язык')),
                ('type', models.CharField(choices=[('S', 'Школа'), ('G', 'Гимназия'), ('L', 'Лицей'), ('C', 'Колледж')], default='L', max_length=1, verbose_name='Тип')),
                ('start_grade', models.SmallIntegerField(default=1, verbose_name='Младший класс')),
                ('final_grade', models.SmallIntegerField(default=12, verbose_name='Старший класс')),
                ('desc', models.TextField(blank=True, default='', verbose_name='Описание')),
                ('phones', models.CharField(blank=True, default='', max_length=24, verbose_name='Телефоны')),
                ('website', models.URLField(blank=True, default='', verbose_name='Сайт')),
                ('work_hours', models.CharField(blank=True, max_length=11, verbose_name='Часы работы')),
                ('photos', models.ManyToManyField(blank=True, related_name='schools', to='api.media', verbose_name='Фотографии')),
                ('preview', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='school', to='api.media', verbose_name='Превью')),
                ('profiles', models.ManyToManyField(blank=True, related_name='schools', to='api.profile', verbose_name='Профили')),
            ],
            options={
                'verbose_name': 'Школа',
                'verbose_name_plural': 'Школы',
            },
        ),
        migrations.AddField(
            model_name='klass',
            name='school',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='klasses', to='api.school', verbose_name='Школа'),
        ),
        migrations.CreateModel(
            name='SpecificLesson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('date', models.DateField(verbose_name='Дата')),
                ('homework', models.TextField(blank=True, default='', verbose_name='Домашнее задание')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specific_lessons', to='api.lesson', verbose_name='Урок')),
                ('media', models.ManyToManyField(to='api.media', verbose_name='Файлы')),
            ],
            options={
                'verbose_name': 'Конкретный урок',
                'verbose_name_plural': 'Конкретные уроки',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('balance', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student', to='api.balance', verbose_name='Баланс')),
                ('klass', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='api.klass', verbose_name='Класс')),
                ('subscription', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to='api.subscription', verbose_name='Подписка')),
            ],
            options={
                'verbose_name': 'Ученик',
                'verbose_name_plural': 'Ученики',
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('timestamp', models.DateTimeField(auto_created=True, verbose_name='Время')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('note', models.SmallIntegerField(default=10, verbose_name='Оценка')),
                ('comment', models.CharField(blank=True, default='', max_length=256, verbose_name='Комментарий')),
                ('specific_lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_notes', to='api.specificlesson', verbose_name='Конкретный урок')),
                ('student', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes', to='api.student', verbose_name='Ученик')),
            ],
            options={
                'verbose_name': 'Оценка',
                'verbose_name_plural': 'Оценки',
            },
        ),
        migrations.CreateModel(
            name='HomeWork',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('comment', models.CharField(blank=True, default='', max_length=256, verbose_name='Комментарий')),
                ('media', models.ManyToManyField(to='api.media', verbose_name='Файлы')),
                ('specific_lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_homeworks', to='api.specificlesson', verbose_name='Конкретный урок')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homeworks', to='api.student', verbose_name='Ученик')),
            ],
            options={
                'verbose_name': 'Домашнее задание',
                'verbose_name_plural': 'Домашние задания',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=32, verbose_name='Название')),
                ('verbose_name', models.CharField(blank=True, default='', max_length=48, verbose_name='Читаемое название')),
                ('grade', models.SmallIntegerField(default=5, verbose_name='Класс')),
                ('lang', models.CharField(choices=[('RO', 'RO'), ('RU', 'RU'), ('EN', 'EN'), ('FR', 'FR'), ('BU', 'BU'), ('UK', 'UK'), ('GA', 'GA')], default='RO', max_length=2, verbose_name='Язык')),
                ('image', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.media', verbose_name='Картинка')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
                'ordering': ['lang', 'grade'],
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('subject', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modules', to='api.subject', verbose_name='Предмет')),
            ],
            options={
                'verbose_name': 'Модуль',
                'verbose_name_plural': 'Модули',
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='subject',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.subject', verbose_name='Предмет'),
        ),
        migrations.AddField(
            model_name='klass',
            name='lessons',
            field=models.ManyToManyField(through='api.Lesson', to='api.subject', verbose_name='Уроки'),
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('experience', models.SmallIntegerField(default=0, verbose_name='Стаж работы')),
                ('schools', models.ManyToManyField(related_name='staff', to='api.school', verbose_name='Школы')),
                ('subjects', models.ManyToManyField(related_name='teachers', to='api.subject', verbose_name='Предметы')),
            ],
            options={
                'verbose_name': 'Учитель',
                'verbose_name_plural': 'Учителя',
            },
        ),
        migrations.AddField(
            model_name='school',
            name='director',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.teacher', verbose_name='Директор'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='teacher',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.teacher', verbose_name='Учитель'),
        ),
        migrations.AddField(
            model_name='klass',
            name='teacher',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.teacher', verbose_name='Учитель'),
        ),
        migrations.CreateModel(
            name='ModuleProgress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('percent', models.CharField(default='0', max_length=3, verbose_name='Процент выполнения')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='api.module', verbose_name='Модуль')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules_progress', to='api.student', verbose_name='Ученик')),
                ('completed_tasks', models.ManyToManyField(blank=True, to='api.task', verbose_name='Выполненные задания')),
                ('completed_theories', models.ManyToManyField(blank=True, to='api.theory', verbose_name='Выполненные теории')),
            ],
            options={
                'verbose_name': 'Прогресс модуля',
                'verbose_name_plural': 'Прогрессы модулей',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('module', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='topics', to='api.module', verbose_name='Модуль')),
            ],
            options={
                'verbose_name': 'Тема',
                'verbose_name_plural': 'Тема',
            },
        ),
        migrations.AddField(
            model_name='theory',
            name='topic',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='theories', to='api.topic', verbose_name='Тема'),
        ),
        migrations.AddField(
            model_name='task',
            name='topic',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='api.topic', verbose_name='Тема'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('is_teacher', models.BooleanField(default=False, verbose_name='Учитель')),
                ('name', models.CharField(max_length=16, verbose_name='Имя')),
                ('surname', models.CharField(max_length=16, verbose_name='Фамилия')),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
                ('avatar', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.media')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.AddField(
            model_name='teacher',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to='api.user', verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='student',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to='api.user', verbose_name='Пользователь'),
        ),
        migrations.CreateModel(
            name='Social',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('ig', 'Instagram'), ('fb', 'Facebook')], max_length=2, verbose_name='Соц. сеть')),
                ('link', models.URLField(verbose_name='Ссылка')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='socials', to='api.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Ссылка на соц. сеть',
                'verbose_name_plural': 'Ссылки на соц. сети',
            },
        ),
        migrations.AddField(
            model_name='school',
            name='manager',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.user', verbose_name='Менеджер'),
        ),
        migrations.AlterUniqueTogether(
            name='lesson',
            unique_together={('klass', 'starting', 'weekday')},
        ),
    ]
